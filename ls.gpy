#!/usr/bin/python
"""This module was generated by mockcmd.py version 0.04
on 08/12/2014 called by mrc@devnull
with the following invocation:
['ls', '-la']
"""

import sys
import hashlib

CALL_MAP = {'ccb82b6ee630bd59e6fd9ee5d2bcfb7d': 'fec63ddfd4c29a6c1663743678272801', 'e7ff284e3bc36d4a410e9ba6368f9d18': '52f01c6e1c6b1d40be8cc7ad5bf56dce', 'd5491c71a0da2aaae025bfaadff7b903': 'fec63ddfd4c29a6c1663743678272801', '0e3261bd921d71b57bea8a128da17266': 'fec63ddfd4c29a6c1663743678272801', 'd751713988987e9331980363e24189ce': '66454a5b0f876db7f92aa26a70ebe89a'}

OUTPUTS = {'fec63ddfd4c29a6c1663743678272801': 'total 68\ndrwxrwxr-x  3 mrc mrc 4096 Dec  8 00:33 .\ndrwxrwxr-x 22 mrc mrc 4096 Nov 30 23:41 ..\n-rwxrwxr-x  1 mrc mrc 8380 Dec  8 00:33 cmdmock.py\ndrwxrwxr-x  8 mrc mrc 4096 Dec  7 22:34 .git\n-rw-rw-r--  1 mrc mrc  102 Nov 30 23:43 .gitignore\n-rw-rw-r--  1 mrc mrc 1087 Nov 30 23:41 LICENSE\n-rwxrwxr-x  1 mrc mrc 2173 Dec  7 23:57 ls\n-rwxrwxr-x  1 mrc mrc 2368 Dec  8 00:32 ls.gpy\n-rw-rw-r--  1 mrc mrc 8655 Dec  1 00:00 pylintrc\n-rw-rw-r--  1 mrc mrc 1326 Dec  2 00:09 README.md\n-rw-rw-r--  1 mrc mrc   52 Dec  3 00:04 sensors.train\n-rw-rw-r--  1 mrc mrc 1950 Dec  8 00:32 test_serial.py\n-rw-rw-r--  1 mrc mrc 1091 Dec  7 22:34 todo.txt\n', '66454a5b0f876db7f92aa26a70ebe89a': 'cmdmock.py\nLICENSE\nls\nls.gpy\npylintrc\nREADME.md\nsensors.train\ntest_serial.py\ntodo.txt\n', '52f01c6e1c6b1d40be8cc7ad5bf56dce': 'total 68K\ndrwxrwxr-x  3 mrc mrc 4.0K Dec  8 00:33 .\ndrwxrwxr-x 22 mrc mrc 4.0K Nov 30 23:41 ..\n-rwxrwxr-x  1 mrc mrc 8.2K Dec  8 00:33 cmdmock.py\ndrwxrwxr-x  8 mrc mrc 4.0K Dec  7 22:34 .git\n-rw-rw-r--  1 mrc mrc  102 Nov 30 23:43 .gitignore\n-rw-rw-r--  1 mrc mrc 1.1K Nov 30 23:41 LICENSE\n-rwxrwxr-x  1 mrc mrc 2.2K Dec  7 23:57 ls\n-rwxrwxr-x  1 mrc mrc 2.4K Dec  8 00:32 ls.gpy\n-rw-rw-r--  1 mrc mrc 8.5K Dec  1 00:00 pylintrc\n-rw-rw-r--  1 mrc mrc 1.3K Dec  2 00:09 README.md\n-rw-rw-r--  1 mrc mrc   52 Dec  3 00:04 sensors.train\n-rw-rw-r--  1 mrc mrc 2.0K Dec  8 00:32 test_serial.py\n-rw-rw-r--  1 mrc mrc 1.1K Dec  7 22:34 todo.txt\n'}

def main(argv):
	"""Main Module"""

	invocation_hash = hashlib.md5(str(argv[1:])).hexdigest()
	if invocation_hash in CALL_MAP:
		print OUTPUTS[CALL_MAP[invocation_hash]]
	else:
		print "Unsupported argument"
		raise ValueError

if __name__ == "__main__":
	sys.exit(main(sys.argv))